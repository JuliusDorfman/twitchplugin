import './App.sass';
import React from 'react';
import Navbar from './Navbar';
import Instructions from './Components/Instructions';
import Streams from './Streams';
import chatting from './Assets/chatting.gif'
// import Appbackground from './Components/Appbackground';

class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      pageRerender: false,
      currentPage: 'home',
      streamerName: '',
      getHome: false,
      navWrapper: false,
    }
  }

  // dummyFunction = (props) => {
  //   console.log("Dummy Function in App.jsx called from NavbarComponent Props: ", this.props);
  // }

  passStreamerName = (props) => {
    this.setState({ streamerName: props.searchSubmit });
    // The Streams component passes down this.state.streamerName 
    // The Streams commponent on componentDidUpdate compares the prevProps
    // with the new props and triggers api.post(/getStreamerChannel)
  }

  passGetTopGames = (currentPage) => {
    this.setState({ getHome: true })
  }

  // NEVER DO THIS AGAIN
  // handleSetHome =() =>{
  //   this.setState({getHome: false})
  // }

  componentDidMount = () => {
    window.addEventListener('scroll', this.handleScroll);
  }

  componentWillUnmount = () => {
    window.removeEventListener('scroll', this.handleScroll);
  }

  handleScroll = () => {
    let scrollTop = window.scrollY;
    scrollTop > 150 ? this.setState({navWrapper: true}) : this.setState({navWrapper: false});
    
  }

  render() {
    let navWrapper = this.state.navWrapper;

    return (
      <div className="App" onScroll={this.handleScroll}>
        <Instructions />
        <header className="App-header">
          <Navbar navWrapper={navWrapper} searchSubmit={this.state.searchInput} pageRerender={this.state.pageRerender}
            handleDummyFunction={this.dummyFunction} passStreamerName={this.passStreamerName} passGetTopGames={this.passGetTopGames} />
          <h1 id="site-title"><span className="italicized">Art of Twitch Chat</span></h1>
          <img src={chatting} alt="pepe-typing" /><p className="sub-header">Art Generated by the chat contributions of your peers!</p>
        </header>
        <main>
          <Streams streamername={this.state.streamerName} getHome={[this.state.getHome, this.state.currentPage]} />
          {/* <Streams streamername={this.state.streamerName} getHome={[this.state.getHome, this.state.currentPage]} setHome={this.handleSetHome()}/> */}
        </main>
        {/* <Appbackground /> */}

      </div>
    );
  }
}

export default App;
